#
# Copyright (C) 2011 Chris McClelland
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
MODULE := gate
SIGNALS := \
	op_in  \
	a_in   \
	b_in   \
	x_out
VHDLS := \
	${MODULE}_pkg.vhdl \
	${MODULE}.vhdl

all: synthesis simulation

synthesis: ${VHDLS}
	mkdir -p synthesis
	for i in $+; do echo "vhdl work \"$$i\""; done > synthesis/$(MODULE).prj
	echo "set -tmpdir \"xst/projnav.tmp\"" > synthesis/platform.xst
	echo "set -xsthdpdir \"xst\"" >> synthesis/platform.xst
	echo "run" >> synthesis/platform.xst
	echo "-ifn ${MODULE}.prj" >> synthesis/platform.xst
	echo "-ifmt mixed" >> synthesis/platform.xst
	echo "-ofn ${MODULE}" >> synthesis/platform.xst
	echo "-ofmt NGC" >> synthesis/platform.xst
	echo "-p xc3s200-4-ft256" >> synthesis/platform.xst
	echo "-top ${MODULE}" >> synthesis/platform.xst
	echo "-opt_mode Speed" >> synthesis/platform.xst
	echo "-opt_level 1" >> synthesis/platform.xst
	cp *.vhdl synthesis/
	mkdir -p synthesis/xst/projnav.tmp
	cd synthesis && xst -intstyle ise -ifn platform.xst -ofn ${MODULE}.syr
	grep WARNINGS synthesis/* | grep -Eq "XST_NUMBER_OF_WARNINGS\" value=\"0\""
	touch $@

simulation: ${VHDLS} ${MODULE}_tb.vhdl
	mkdir -p simulation
	ghdl -i --ieee=synopsys --std=93c --vital-checks --warn-binding --warn-reserved --warn-library --warn-vital-generic --warn-delayed-checks --warn-body --warn-specs --warn-unused --warn-error --workdir=simulation --work=work *.vhdl
	ghdl -m --ieee=synopsys --std=93c --vital-checks --warn-binding --warn-reserved --warn-library --warn-vital-generic --warn-delayed-checks --warn-body --warn-specs --warn-unused --warn-error --workdir=simulation --work=work ${MODULE}_tb
	mv ${MODULE}_tb simulation
	./simulation/${MODULE}_tb --stop-time=115265ns --wave=simulation/${MODULE}_tb.ghw
	touch $@

waves: simulation
	echo "set signalList [list]" > simulation/startup.tcl
	for i in ${SIGNALS}; do echo "lappend signalList \"uut.$$i\"" >> simulation/startup.tcl; done
	echo "set num_added [ gtkwave::addSignalsFromList \$$signalList ]" >> simulation/startup.tcl
	echo "gtkwave::setZoomFactor -26" >> simulation/startup.tcl
	echo "gtkwave::setMarker 55ns" >> simulation/startup.tcl
	gtkwave -T simulation/startup.tcl simulation/${MODULE}_tb.ghw

clean: FORCE
	rm -rf synthesis simulation results.txt

FORCE:
